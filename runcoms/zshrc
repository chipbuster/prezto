#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#Load bart theme
autoload -Uz promptinit
promptinit
prompt garrett

######################
# User configuration #
######################


# You may need to manually set your language environment
export LANG=en_US.UTF-8

unsetopt correct_all  
unsetopt correct

### Set up auto Dirstack ####
#Use dirs -v to list and cd -<#> to revisit
setopt autopushd pushdsilent pushdtohome
setopt pushdignoredups # Ignore duplicate entries
setopt pushdminus # This reverts the +/- operators.
#### End autodirstack ####

setopt extended_glob

TERM='xterm-256color'
alias dirs="dirs -v"

##Hash R so that autocd doesn't bite us in the arse
hash R &> /dev/null

##Disable GREP_OPTIONS (annoying warnings)
unset GREP_OPTIONS

#Change output of time to be bash-like
TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S'

unsetopt IGNORE_EOF
setopt clobber
unsetopt CDABLE_VARS

# Hash SSH config and known_hosts to get SSH completion lists
h=()
if [[ -r ~/.ssh/config ]]; then
  h=($h ${${${(@M)${(f)"$(cat ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
fi
if [[ -r ~/.ssh/known_hosts ]]; then
  h=($h ${${${(f)"$(cat ~/.ssh/known_hosts{,2} || true)"}%%\ *}%%,*}) 2>/dev/null
fi
if [[ $#h -gt 0 ]]; then
  zstyle ':completion:*:ssh:*' hosts $h
  zstyle ':completion:*:slogin:*' hosts $h
fi

# Rawrrrr >:3
alias kk="bg && disown"

# Makeflags export
export MAKEFLAGS="-j$(nproc --all)"

# For Z
[[ -r "/usr/share/z/z.sh" ]] && source /usr/share/z/z.sh

# For FZF
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh

# Keychain for easy SSH
eval $(keychain --eval --quiet --noask --nogui)

# Command not found
source /usr/share/doc/pkgfile/command-not-found.zsh

# Change default editors
export EDITOR=vim
export VISUAL=vim

# Check that path is valid
function check-path-problems(){
    PROBLEMS="false"
    SPLITPATH=("${(@s/:/)PATH}")
    for DIR in ${SPLITPATH[@]}; do
        if [ ! -d "$DIR" ]; then
            echo "WARN: Directory $DIR in PATH does not seem to exist!"
            PROBLEMS="true"
        fi
    done
    if [ "$PROBLEMS" = "true" ]; then
        echo "Problems detected in PATH. Fix them in ~/.zprofile"
    fi
}

# Define a function to use xdg-open and alias it (simiar to OS X)
if [ -n "$(type xdg-open)" ]; then
function open-xdg-thing(){
  xdg-open "$1" &> /dev/null || printf "xdg-open could not open %s (maybe bad mimetype?)\n" "$1"
    open() {
        local x
        [ "$#" = 0 ] && echo 'Usage: open <file> [...]' >&2 && return 2
        for x in "$@"; do
            xdg-open "$x"
        done
    }
}
fi

alias open="open-xdg-thing"
check-path-problems

function checkcuda(){
python2 -c 'import torch.cuda
print torch.cuda.is_available()'
}

# Check for Ruby changes
if [ -d "$GEM_CANDIDATE" ]; then
    export GEM_HOME="$GEM_CANDIDATE"
    export GEM_PATH="$GEM_HOME"
    export PATH="$PATH:$GEM_HOME/bin"
else
    echo "WARN: RubyGem path $GEM_CANDIDATE was not found on this system"
    echo "Has there been a recent update to Ruby or the gem system?"
    echo "If so, you can silence this warning with:"
    echo "\t mkdir -p $GEM_CANDIDATE/bin"
fi


