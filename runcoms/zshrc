#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#Load bart theme
autoload -Uz promptinit
promptinit
prompt sorin

######################
# User configuration #
######################


# You may need to manually set your language environment
export LANG=en_US.UTF-8

unsetopt correct_all  
unsetopt correct

#History limits
HISTSIZE=1000
SAVEHIST=4000

### Set up auto Dirstack ####
#Use dirs -v to list and cd -<#> to revisit
setopt autopushd pushdsilent pushdtohome
setopt pushdignoredups # Ignore duplicate entries
setopt pushdminus # This reverts the +/- operators.
#### End autodirstack ####

setopt extended_glob

TERM='xterm-256color'
alias dirs="dirs -v"

##Hash R so that autocd doesn't bite us in the arse
hash R &> /dev/null

##Disable GREP_OPTIONS (annoying warnings)
unset GREP_OPTIONS

#Change output of time to be bash-like
TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S'

unsetopt IGNORE_EOF
setopt clobber
unsetopt CDABLE_VARS

# Hash SSH config and known_hosts to get SSH completion lists
h=()
if [[ -r ~/.ssh/config ]]; then
  h=($h ${${${(@M)${(f)"$(cat ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
fi
if [[ -r ~/.ssh/known_hosts ]]; then
  h=($h ${${${(f)"$(cat ~/.ssh/known_hosts{,2} || true)"}%%\ *}%%,*}) 2>/dev/null
fi
if [[ $#h -gt 0 ]]; then
  zstyle ':completion:*:ssh:*' hosts $h
  zstyle ':completion:*:slogin:*' hosts $h
fi

# Rawrrrr >:3
alias kk="bg && disown"

function compiler-export(){		
  # Edit the order of the conditionals to change preferred compilers		
  if [[ $(whence -p icc) ]]; then		
    CC=$(which icc)		
    CXX=$(which icpc)		
  elif [[ $(whence -p gcc) ]]; then		
    CC=$(which gcc)		
    CXX=$(which g++)		
  elif [[ $(whence -p clang) ]]; then		
    CC=$(which clang)		
    CXX=$(which clang++)		
  else		
    CC=$(which cc)		
    CXX=$(which c++)		
  fi		
		
  export CC		
  export CXX		
		
  echo "I have exported the following:"		
  echo "\t CC=$CC"		
  echo "\t CXX=$CXX"		
}

# Set appropriate maximum load for make: 1/4 of the total threads
export MAKEFLAGS="-l$(( $(nproc --all) / 4))"

# Check that path is valid
function check-path-problems(){
    PROBLEMS="false"
    SPLITPATH=("${(@s/:/)PATH}")
    for DIR in ${SPLITPATH[@]}; do
        if [ ! -d "$DIR" ]; then
            echo "WARN: Directory $DIR in PATH does not seem to exist!"
            PROBLEMS="true"
        fi
    done
    if [ "$PROBLEMS" = "true" ]; then
        echo "Problems detected in PATH. Fix them in ~/.zprofile"
    fi
}


# Display useful CPU information
function display-processor-info(){
  # Get info
  CPUNAMESTRING=$(cat /proc/cpuinfo | grep "model name" | cut -f 2 -d ':' | sed -e 's/^[[:space:]]*//' | uniq) # Name of the CPU
  CPUPHYSCT=$(lscpu | grep "NUMA node(s)" | cut -f 2 -d ':' | sed -e 's/^[[:space:]]*//') # Number of physical sockets for the CPUs
  CPULOGCT=$(lscpu | grep "^CPU(s)" | cut -f 2 -d ':' | sed -e 's/^[[:space:]]*//') # Number of Logical CPUS (incl. hyperthreading)
  CPUFREQ=$(cat /proc/cpuinfo | grep 'cpu MHz' | sort | tail -n 1 | cut -d ':' -f 2 | sed -e 's/^[[:space:]]*//' | cut -d '.' -f 1)

  # Set (bold) colors
  BGREEN='\033[1;36m'
  NC='\033[0m' # No Color

  echo "CPU for ${BGREEN}$(hostname --short) ${NC}is ${BGREEN}$CPUNAMESTRING${NC}"
  echo "${BGREEN}$CPULOGCT ${NC}logical cores on ${BGREEN}$CPUPHYSCT ${NC}sockets. Maxfreq ${BGREEN} $CPUFREQ ${NC} MHz."
}

check-path-problems
display-processor-info
